#include "Jelly.h"

//----------------------------------------------------------------------------------------------------------------------
// CONSTRUCTORS AND DESTRUCTORS
//----------------------------------------------------------------------------------------------------------------------

Jelly::Jelly(float x, float y)
{
    jellyShape.setPosition(x,y);
    setJellyShape();
}

Jelly::~Jelly()
{
    //dtor
}

//----------------------------------------------------------------------------------------------------------------------
// SET UP FUNCTIONS
//----------------------------------------------------------------------------------------------------------------------

void Jelly::setJellyShape()
{
    jellyShape.setFillColor(sf::Color::Green); //choose color of Monster
    jellyShape.setSize(sf::Vector2f(28.f,28.f));
    jellyShape.setOutlineColor(sf::Color::Black);
    jellyShape.setOutlineThickness(1.f);
}

//----------------------------------------------------------------------------------------------------------------------
// CALCULATIONS
//----------------------------------------------------------------------------------------------------------------------


//----------------------------------------------------------------------------------------------------------------------
// ACCESSORS
//----------------------------------------------------------------------------------------------------------------------
sf::Rect<float> Jelly::getJellyBounds()
{
    return jellyShape.getGlobalBounds();
}

sf::Vector2<float> Jelly::getJellyPos()
{
    return jellyShape.getPosition();
}

//----------------------------------------------------------------------------------------------------------------------
// MODIFIERS
//---------------------------------------------------------------------------------------------------------------------
void Jelly::setPos(float x,float y)
{
   jellyShape.setPosition(x,y);
}
//----------------------------------------------------------------------------------------------------------------------
// UPDATE AND RENDER
//----------------------------------------------------------------------------------------------------------------------
void Jelly::refresh(sf::RenderTarget* target)
{


}

void Jelly::manifest(sf::RenderTarget * target)
{
    target->draw(jellyShape);
}
